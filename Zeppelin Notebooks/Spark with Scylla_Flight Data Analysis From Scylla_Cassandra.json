{
  "paragraphs": [
    {
      "title": "Adding Dependencies",
      "text": "%spark.dep\nz.reset() // clean up previously added artifact and repository\n// add artifact recursively\nz.load(\"datastax:spark-cassandra-connector:2.3.0-s_2.11\")\nz.load(\"commons-configuration:commons-configuration:1.10\")",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:09:51+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@61eccb5e\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1548231524558_-1105138565",
      "id": "20190123-134844_1810449358",
      "dateCreated": "2019-01-23T13:48:44+0530",
      "dateStarted": "2019-02-07T12:09:51+0530",
      "dateFinished": "2019-02-07T12:10:05+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:169"
    },
    {
      "text": "%spark\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.cassandra._\n",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:05+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import com.datastax.spark.connector._\nimport org.apache.spark.sql.cassandra._\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1548231580537_891803033",
      "id": "20190123-134940_1336429459",
      "dateCreated": "2019-01-23T13:49:40+0530",
      "dateStarted": "2019-02-07T12:10:05+0530",
      "dateFinished": "2019-02-07T12:10:20+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:170"
    },
    {
      "title": "Create a DataFrame from Cassandra/Scylla Source",
      "text": "%spark\nval flights = spark.read.cassandraFormat(\"flights\", \"flight_data\").load()\n",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:20+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flights: org.apache.spark.sql.DataFrame = [AIRLINE: string, SCHEDULED_DEPARTURE: int ... 29 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1548231595817_1466803761",
      "id": "20190123-134955_970727771",
      "dateCreated": "2019-01-23T13:49:55+0530",
      "dateStarted": "2019-02-07T12:10:20+0530",
      "dateFinished": "2019-02-07T12:10:27+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:171"
    },
    {
      "title": "Print Schema",
      "text": "%spark\nflights.printSchema",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:27+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- AIRLINE: string (nullable = true)\n |-- SCHEDULED_DEPARTURE: integer (nullable = true)\n |-- FLIGHT_NUMBER: integer (nullable = true)\n |-- TAIL_NUMBER: string (nullable = true)\n |-- AIRLINE_DELAY: integer (nullable = true)\n |-- AIR_SYSTEM_DELAY: integer (nullable = true)\n |-- AIR_TIME: integer (nullable = true)\n |-- ARRIVAL_DELAY: integer (nullable = true)\n |-- ARRIVAL_TIME: integer (nullable = true)\n |-- CANCELLATION_REASON: string (nullable = true)\n |-- CANCELLED: integer (nullable = true)\n |-- DAY: integer (nullable = true)\n |-- DAY_OF_WEEK: integer (nullable = true)\n |-- DEPARTURE_DELAY: integer (nullable = true)\n |-- DEPARTURE_TIME: integer (nullable = true)\n |-- DESTINATION_AIRPORT: string (nullable = true)\n |-- DISTANCE: integer (nullable = true)\n |-- DIVERTED: integer (nullable = true)\n |-- ELAPSED_TIME: integer (nullable = true)\n |-- LATE_AIRCRAFT_DELAY: integer (nullable = true)\n |-- MONTH: integer (nullable = true)\n |-- ORIGIN_AIRPORT: string (nullable = true)\n |-- SCHEDULED_ARRIVAL: integer (nullable = true)\n |-- SCHEDULED_TIME: integer (nullable = true)\n |-- SECURITY_DELAY: integer (nullable = true)\n |-- TAXI_IN: integer (nullable = true)\n |-- TAXI_OUT: integer (nullable = true)\n |-- WEATHER_DELAY: integer (nullable = true)\n |-- WHEELS_OFF: integer (nullable = true)\n |-- WHEELS_ON: integer (nullable = true)\n |-- YEAR: integer (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1548231647671_-341528501",
      "id": "20190123-135047_1272248686",
      "dateCreated": "2019-01-23T13:50:47+0530",
      "dateStarted": "2019-02-07T12:10:28+0530",
      "dateFinished": "2019-02-07T12:10:28+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:172"
    },
    {
      "title": "Apply a filter to find flights delayed more than 15 min",
      "text": "%spark\n// Create a Dataset containing flights with delayed departure by more than 15 min using \"filter\"\nval delayedFlights = (flights\n                        .select(\"AIRLINE\", \"DEPARTURE_DELAY\")\n                        .filter($\"DEPARTURE_DELAY\" > 15))\n                        \ndelayedFlights.show()",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:28+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "delayedFlights: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [AIRLINE: string, DEPARTURE_DELAY: int]\n+-------+---------------+\n|AIRLINE|DEPARTURE_DELAY|\n+-------+---------------+\n|     US|             23|\n|     US|             16|\n|     US|             89|\n|     US|             53|\n|     US|             26|\n|     US|             25|\n|     US|            194|\n|     US|             62|\n|     US|            160|\n|     US|             24|\n|     US|             54|\n|     US|             18|\n|     US|             55|\n|     US|             19|\n|     US|             16|\n|     US|             24|\n|     US|             88|\n|     US|            350|\n|     US|             56|\n|     US|            101|\n+-------+---------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=0",
            "http://192.168.1.70:4041/jobs/job?id=1",
            "http://192.168.1.70:4041/jobs/job?id=2"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231704922_-218117338",
      "id": "20190123-135144_955923747",
      "dateCreated": "2019-01-23T13:51:44+0530",
      "dateStarted": "2019-02-07T12:10:28+0530",
      "dateFinished": "2019-02-07T12:10:34+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:173"
    },
    {
      "title": "Display percentage of delayed flights",
      "text": "%spark\nval numTotalFlights = flights.count()\nval numDelayedFlights = delayedFlights.count()\n\n// Print total number of delayed flights\nprintln(\"Percentage of Delayed Flights: \" + (numDelayedFlights.toFloat/numTotalFlights*100) + \"%\")",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:34+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "numTotalFlights: Long = 522885\nnumDelayedFlights: Long = 95270\nPercentage of Delayed Flights: 18.220066%\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=3",
            "http://192.168.1.70:4041/jobs/job?id=4"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231732917_-1558812785",
      "id": "20190123-135212_69164827",
      "dateCreated": "2019-01-23T13:52:12+0530",
      "dateStarted": "2019-02-07T12:10:34+0530",
      "dateFinished": "2019-02-07T12:10:55+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:174"
    },
    {
      "title": " Create a UDF to determine delays",
      "text": "%spark\nimport org.apache.spark.sql.functions.udf\n\n// Define a UDF to find delayed flights\n\n// Assume:\n//  if ArrDelay is not available then Delayed = False\n//  if ArrDelay > 15 min then Delayed = True else False\n\nval isDelayedUDF = udf((DEPARTURE_DELAY: String) => { \n                 try {\n        if (DEPARTURE_DELAY.trim == \"null\") 0 \n                else if (DEPARTURE_DELAY.trim.toInt > 15) 1 \n                else 0\n      } catch {\n         case _  : Throwable =>{\n           0\n         }\n         \n         \n      }\n                \n    \n})",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:55+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions.udf\nisDelayedUDF: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1548231772531_1480527080",
      "id": "20190123-135252_1309658380",
      "dateCreated": "2019-01-23T13:52:52+0530",
      "dateStarted": "2019-02-07T12:10:55+0530",
      "dateFinished": "2019-02-07T12:10:57+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:175"
    },
    {
      "title": "Create a new DataFrame with IsDelayed column",
      "text": "%spark\nval flightsWithDelays = flights.select($\"YEAR\", $\"MONTH\", $\"AIRLINE\", $\"FLIGHT_NUMBER\", $\"ORIGIN_AIRPORT\", $\"DEPARTURE_DELAY\", \n                    isDelayedUDF($\"DEPARTURE_DELAY\").alias(\"IsDelayed\"))\n                    \nflightsWithDelays.show(5)",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:57+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flightsWithDelays: org.apache.spark.sql.DataFrame = [YEAR: int, MONTH: int ... 5 more fields]\n+----+-----+-------+-------------+--------------+---------------+---------+\n|YEAR|MONTH|AIRLINE|FLIGHT_NUMBER|ORIGIN_AIRPORT|DEPARTURE_DELAY|IsDelayed|\n+----+-----+-------+-------------+--------------+---------------+---------+\n|2015|    1|     US|          580|           SLC|              6|        0|\n|2015|    1|     US|          580|           SLC|             12|        0|\n|2015|    1|     US|          580|           SLC|              4|        0|\n|2015|    1|     US|         2020|           PHX|             -5|        0|\n|2015|    2|     US|         2020|           PHX|             -4|        0|\n+----+-----+-------+-------------+--------------+---------------+---------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=5",
            "http://192.168.1.70:4041/jobs/job?id=6",
            "http://192.168.1.70:4041/jobs/job?id=7"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231808880_-1214698433",
      "id": "20190123-135328_1973661478",
      "dateCreated": "2019-01-23T13:53:28+0530",
      "dateStarted": "2019-02-07T12:10:57+0530",
      "dateFinished": "2019-02-07T12:10:59+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:176"
    },
    {
      "title": "Calculate percentage of delayed flights using flightsWithDelays DataFrame",
      "text": "%spark\nflightsWithDelays.agg((sum(\"IsDelayed\") * 100 / count(\"DEPARTURE_DELAY\")).alias(\"Percentage of Delayed Flights\")).show()",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:10:59+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-----------------------------+\n|Percentage of Delayed Flights|\n+-----------------------------+\n|           18.220067510064354|\n+-----------------------------+\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=8"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231820625_-1174609174",
      "id": "20190123-135340_1743774218",
      "dateCreated": "2019-01-23T13:53:40+0530",
      "dateStarted": "2019-02-07T12:10:59+0530",
      "dateFinished": "2019-02-07T12:11:15+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:177"
    },
    {
      "title": "Find Avg Taxi-in",
      "text": "%spark\n(flights.select(\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\", \"TAXI_IN\")\n        .groupBy(\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\")\n        .agg(avg(\"TAXI_IN\")\n        .alias(\"AVG_TAXI_IN\"))\n        .orderBy(desc(\"AVG_TAXI_IN\"))\n        .show(10))",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:11:15+0530",
      "config": {
        "colWidth": 6,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+-------------------+------------------+\n|ORIGIN_AIRPORT|DESTINATION_AIRPORT|       AVG_TAXI_IN|\n+--------------+-------------------+------------------+\n|           MQT|                ORD|38.214285714285715|\n|           EVV|                ORD|25.336283185840706|\n|           ABQ|                ORD| 24.48148148148148|\n|           BNA|                MIA|23.166666666666668|\n|           PIT|                DCA|              23.0|\n|           SUX|                ORD|            22.375|\n|           LSE|                ORD| 21.87719298245614|\n|           FAR|                ATL|              21.5|\n|           CMI|                ORD|21.338797814207652|\n|           MHK|                ORD|21.272727272727273|\n+--------------+-------------------+------------------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=9"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231835209_-729940646",
      "id": "20190123-135355_1260130755",
      "dateCreated": "2019-01-23T13:53:55+0530",
      "dateStarted": "2019-02-07T12:11:15+0530",
      "dateFinished": "2019-02-07T12:11:27+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:178"
    },
    {
      "title": "Find Avg Taxi-Out",
      "text": "%spark\n(flights.select(\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\", \"TAXI_OUT\")\n        .groupBy(\"ORIGIN_AIRPORT\", \"DESTINATION_AIRPORT\")\n        .agg(avg(\"TAXI_OUT\")\n        .alias(\"AVG_TAXI_OUT\"))\n        .orderBy(desc(\"AVG_TAXI_OUT\"))\n        .show(10))",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:11:27+0530",
      "config": {
        "colWidth": 6,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+-------------------+------------------+\n|ORIGIN_AIRPORT|DESTINATION_AIRPORT|      AVG_TAXI_OUT|\n+--------------+-------------------+------------------+\n|           LGA|                EYW|              76.0|\n|           CLE|                PHL|              73.0|\n|           SWF|                LGA|              58.0|\n|           MSP|                MBS|46.333333333333336|\n|           BUF|                MSP|              45.0|\n|           FAR|                JMS|              40.0|\n|           DEN|                PIA|              37.8|\n|           GUC|                ORD|              37.0|\n|           DSM|                PHX|              37.0|\n|           LGA|                GSP|              36.5|\n+--------------+-------------------+------------------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=10"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231855153_-1324666291",
      "id": "20190123-135415_2004440282",
      "dateCreated": "2019-01-23T13:54:15+0530",
      "dateStarted": "2019-02-07T12:11:27+0530",
      "dateFinished": "2019-02-07T12:11:41+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:179"
    },
    {
      "title": "Register a Temporary View",
      "text": "%spark\n// Convert flights DataFrame to a temporary view\nflights.createOrReplaceTempView(\"flightsView\")",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:11:41+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1548231879496_-655579695",
      "id": "20190123-135439_1159778464",
      "dateCreated": "2019-01-23T13:54:39+0530",
      "dateStarted": "2019-02-07T12:11:41+0530",
      "dateFinished": "2019-02-07T12:11:41+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:180"
    },
    {
      "title": "Preview Data in an interactive table format",
      "text": "%spark.sql\n\nSELECT * FROM flightsView LIMIT 20",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:11:41+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "AIRLINE": "string",
                      "YEAR": "string",
                      "MONTH": "string",
                      "DAY": "string",
                      "SCHEDULED_DEPARTURE": "string",
                      "AIRLINE_DELAY": "string",
                      "AIR_SYSTEM_DELAY": "string",
                      "AIR_TIME": "string",
                      "ARRIVAL_DELAY": "string",
                      "ARRIVAL_TIME": "string",
                      "CANCELLATION_REASON": "string",
                      "CANCELLED": "string",
                      "DAY_OF_WEEK": "string",
                      "DEPARTURE_DELAY": "string",
                      "DEPARTURE_TIME": "string",
                      "DESTINATION_AIRPORT": "string",
                      "DISTANCE": "string",
                      "DIVERTED": "string",
                      "ELAPSED_TIME": "string",
                      "FLIGHT_NUMBER": "string",
                      "LATE_AIRCRAFT_DELAY": "string",
                      "ORIGIN_AIRPORT": "string",
                      "SCHEDULED_ARRIVAL": "string",
                      "SCHEDULED_TIME": "string",
                      "SECURITY_DELAY": "string",
                      "TAIL_NUMBER": "string",
                      "TAXI_IN": "string",
                      "TAXI_OUT": "string",
                      "WEATHER_DELAY": "string",
                      "WHEELS_OFF": "string",
                      "WHEELS_ON": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "AIRLINE\tSCHEDULED_DEPARTURE\tFLIGHT_NUMBER\tTAIL_NUMBER\tAIRLINE_DELAY\tAIR_SYSTEM_DELAY\tAIR_TIME\tARRIVAL_DELAY\tARRIVAL_TIME\tCANCELLATION_REASON\tCANCELLED\tDAY\tDAY_OF_WEEK\tDEPARTURE_DELAY\tDEPARTURE_TIME\tDESTINATION_AIRPORT\tDISTANCE\tDIVERTED\tELAPSED_TIME\tLATE_AIRCRAFT_DELAY\tMONTH\tORIGIN_AIRPORT\tSCHEDULED_ARRIVAL\tSCHEDULED_TIME\tSECURITY_DELAY\tTAXI_IN\tTAXI_OUT\tWEATHER_DELAY\tWHEELS_OFF\tWHEELS_ON\tYEAR\nUS\t10\t580\tN117UW\t0\t0\t212\t-2\t612\t0\t0\t3\t6\t6\t16\tPHL\t1927\t0\t236\t0\t1\tSLC\t614\t244\t0\t6\t18\t0\t34\t606\t2015\nUS\t10\t580\tN105UW\t0\t0\t210\t1\t615\t0\t0\t2\t5\t12\t22\tPHL\t1927\t0\t233\t0\t1\tSLC\t614\t244\t0\t3\t20\t0\t42\t612\t2015\nUS\t10\t580\tN103US\t0\t0\t210\t-16\t558\t0\t0\t5\t1\t4\t14\tPHL\t1927\t0\t224\t0\t1\tSLC\t614\t244\t0\t2\t12\t0\t26\t556\t2015\nUS\t15\t2020\tN917US\t0\t0\t189\t-23\t537\t0\t0\t29\t4\t-5\t10\tCLT\t1773\t0\t207\t0\t1\tPHX\t600\t225\t0\t7\t11\t0\t21\t530\t2015\nUS\t15\t2020\tN914UY\t0\t0\t204\t-3\t557\t0\t0\t5\t4\t-4\t11\tCLT\t1773\t0\t226\t0\t2\tPHX\t600\t225\t0\t6\t16\t0\t27\t551\t2015\nUS\t15\t2020\tN585UW\t0\t0\t192\t-15\t545\t0\t0\t15\t4\t-5\t10\tCLT\t1773\t0\t215\t0\t1\tPHX\t600\t225\t0\t5\t18\t0\t28\t540\t2015\nUS\t15\t2020\tN582UW\t0\t0\t196\t10\t610\t0\t0\t31\t6\t23\t38\tCLT\t1773\t0\t212\t0\t1\tPHX\t600\t225\t0\t6\t10\t0\t48\t604\t2015\nUS\t15\t2020\tN578UW\t0\t0\t195\t-25\t535\t0\t0\t3\t2\t-10\t5\tCLT\t1773\t0\t210\t0\t2\tPHX\t600\t225\t0\t5\t10\t0\t15\t530\t2015\nUS\t15\t2020\tN570UW\t0\t0\t189\t1\t601\t0\t0\t9\t5\t16\t31\tCLT\t1773\t0\t210\t0\t1\tPHX\t600\t225\t0\t7\t14\t0\t45\t554\t2015\nUS\t15\t2020\tN568UW\t0\t0\t200\t1\t601\t0\t0\t24\t6\t8\t23\tCLT\t1773\t0\t218\t0\t1\tPHX\t600\t225\t0\t5\t13\t0\t36\t556\t2015\nUS\t15\t2020\tN566UW\t0\t0\t198\t-5\t555\t0\t0\t10\t6\t0\t15\tCLT\t1773\t0\t220\t0\t1\tPHX\t600\t225\t0\t10\t12\t0\t27\t545\t2015\nUS\t15\t2020\tN565UW\t0\t0\t181\t-32\t528\t0\t0\t21\t3\t-9\t6\tCLT\t1773\t0\t202\t0\t1\tPHX\t600\t225\t0\t7\t14\t0\t20\t521\t2015\nUS\t15\t2020\tN564UW\t0\t0\t199\t-7\t553\t0\t0\t6\t5\t0\t15\tCLT\t1773\t0\t218\t0\t2\tPHX\t600\t225\t0\t7\t12\t0\t27\t546\t2015\nUS\t15\t2020\tN561UW\t0\t0\t196\t-15\t545\t0\t0\t7\t3\t-5\t10\tCLT\t1773\t0\t215\t0\t1\tPHX\t600\t225\t0\t6\t13\t0\t23\t539\t2015\nUS\t15\t2020\tN557UW\t0\t0\t200\t-8\t552\t0\t0\t13\t2\t-3\t12\tCLT\t1773\t0\t220\t0\t1\tPHX\t600\t225\t0\t5\t15\t0\t27\t547\t2015\nUS\t15\t2020\tN555AY\t0\t0\t191\t-21\t539\t0\t0\t20\t2\t-6\t9\tCLT\t1773\t0\t210\t0\t1\tPHX\t600\t225\t0\t7\t12\t0\t21\t532\t2015\nUS\t15\t2020\tN547UW\t0\t0\t199\t-11\t549\t0\t0\t28\t3\t-5\t10\tCLT\t1773\t0\t219\t0\t1\tPHX\t600\t225\t0\t5\t15\t0\t25\t544\t2015\nUS\t15\t2020\tN545UW\t0\t0\t189\t-20\t540\t0\t0\t22\t4\t-2\t13\tCLT\t1773\t0\t207\t0\t1\tPHX\t600\t225\t0\t6\t12\t0\t25\t534\t2015\nUS\t15\t2020\tN544UW\t0\t0\t197\t-14\t546\t0\t0\t8\t4\t-3\t12\tCLT\t1773\t0\t214\t0\t1\tPHX\t600\t225\t0\t4\t13\t0\t25\t542\t2015\nUS\t15\t2020\tN542UW\t0\t0\t192\t-16\t544\t0\t0\t14\t3\t-2\t13\tCLT\t1773\t0\t211\t0\t1\tPHX\t600\t225\t0\t6\t13\t0\t26\t538\t2015\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=11",
            "http://192.168.1.70:4041/jobs/job?id=12",
            "http://192.168.1.70:4041/jobs/job?id=13"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231905740_-1819456477",
      "id": "20190123-135505_298686193",
      "dateCreated": "2019-01-23T13:55:05+0530",
      "dateStarted": "2019-02-07T12:11:41+0530",
      "dateFinished": "2019-02-07T12:11:43+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:181"
    },
    {
      "title": "Register a User Defined Function (UDF)",
      "text": "%spark\n\n// Register a helper UDF to find delayed flights\n// Note that this is a UDF specific for use with the sparkSession\n\n// Assume:\n//  if ArrDelay is not available then Delayed = False\n//  if ArrDelay > 15 min then Delayed = True else False\n\nval isDelayedUDF = (DEPARTURE_DELAY: String) => { \n                 try {\n        if (DEPARTURE_DELAY.trim == \"null\") 0 \n                else if (DEPARTURE_DELAY.trim.toInt > 15) 1 \n                else 0\n      } catch {\n         case _  : Throwable =>{\n           0\n         }\n         \n         \n      }\n                \n    \n}\nspark.udf.register(\"isDelayedUDF\", isDelayedUDF )",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:11:43+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "isDelayedUDF: String => Int = <function1>\nres35: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,IntegerType,Some(List(StringType)))\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1548231919665_1320854901",
      "id": "20190123-135519_780358540",
      "dateCreated": "2019-01-23T13:55:19+0530",
      "dateStarted": "2019-02-07T12:11:43+0530",
      "dateFinished": "2019-02-07T12:11:44+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:182"
    },
    {
      "title": "Compare Total Number of Delayed Flights by Carrier",
      "text": "%spark.sql\n--- Compare Total Number of Delayed Flights by Carrier\nSELECT AIRLINE, SUM(isDelayedUDF(DEPARTURE_DELAY)) AS NumDelays FROM flightsView GROUP BY AIRLINE",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:11:44+0530",
      "config": {
        "colWidth": 6,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "AIRLINE": "string",
                      "NumDelays": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "AIRLINE\tNumDelays\nUA\t10818\nNK\t1633\nAA\t8872\nEV\t9488\nB6\t5295\nDL\t9082\nOO\t9756\nF9\t1538\nUS\t4579\nMQ\t7631\nHA\t280\nAS\t1541\nVX\t646\nWN\t24111\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=14",
            "http://192.168.1.70:4041/jobs/job?id=15",
            "http://192.168.1.70:4041/jobs/job?id=16",
            "http://192.168.1.70:4041/jobs/job?id=17",
            "http://192.168.1.70:4041/jobs/job?id=18"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231951953_1645602877",
      "id": "20190123-135551_462935034",
      "dateCreated": "2019-01-23T13:55:51+0530",
      "dateStarted": "2019-02-07T12:11:44+0530",
      "dateFinished": "2019-02-07T12:12:00+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:183"
    },
    {
      "title": "Compare Total Delayed Time (min) by Carrier",
      "text": "%spark.sql\n--- Compare Total Delayed Time (min) by Carrier\nSELECT AIRLINE, SUM(DEPARTURE_DELAY) AS TotalTimeDelay FROM flightsView GROUP BY AIRLINE",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:12:46+0530",
      "config": {
        "colWidth": 6,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "AIRLINE": "string",
                      "TotalTimeDelay": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-90"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "AIRLINE",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "AIRLINE",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "TotalTimeDelay",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "AIRLINE\tTotalTimeDelay\nUA\t625049\nNK\t90605\nAA\t458702\nEV\t461314\nB6\t279643\nDL\t466922\nOO\t568527\nF9\t109580\nUS\t183119\nMQ\t436554\nHA\t6021\nAS\t39870\nVX\t43194\nWN\t1120077\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=19",
            "http://192.168.1.70:4041/jobs/job?id=20",
            "http://192.168.1.70:4041/jobs/job?id=21",
            "http://192.168.1.70:4041/jobs/job?id=22",
            "http://192.168.1.70:4041/jobs/job?id=23"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548231977324_-785171093",
      "id": "20190123-135617_1222972811",
      "dateCreated": "2019-01-23T13:56:17+0530",
      "dateStarted": "2019-02-07T12:12:00+0530",
      "dateFinished": "2019-02-07T12:12:14+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:184"
    },
    {
      "title": "Find Average Distance Travelled by Carrier",
      "text": "%spark.sql\n--- Find Average Distance Travelled by Carrier\nSELECT AIRLINE, avg(DISTANCE) AS AvgDistanceTraveled FROM flightsView GROUP BY AIRLINE ORDER BY AvgDistanceTraveled DESC",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:12:46+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "AIRLINE": "string",
                      "AvgDistanceTraveled": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": true
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "AIRLINE",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "AIRLINE",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "AvgDistanceTraveled",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "AIRLINE\tAvgDistanceTraveled\nVX\t1402.6316205533597\nAS\t1221.613120400814\nUA\t1211.6865405289186\nAA\t1045.2733092123574\nB6\t1035.019509125236\nNK\t994.6451612903226\nF9\t937.3173572973873\nUS\t890.5190142040632\nDL\t817.9105679490098\nWN\t725.0799172197023\nHA\t645.4593345656192\nOO\t489.0466183217404\nEV\t468.6010103677105\nMQ\t427.346530507055\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=24"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548232077469_312936290",
      "id": "20190123-135757_1501081375",
      "dateCreated": "2019-01-23T13:57:57+0530",
      "dateStarted": "2019-02-07T12:12:14+0530",
      "dateFinished": "2019-02-07T12:12:26+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:185"
    },
    {
      "title": "Find Out When Most Flights Get Delayed by Day of Week",
      "text": "%spark.sql\n\nSELECT DAY_OF_WEEK, CASE WHEN isDelayedUDF(DEPARTURE_DELAY) = 1 THEN 'delayed' ELSE 'ok' END AS Delay, COUNT(1) AS Count\nFROM flightsView\nGROUP BY DAY_OF_WEEK, CASE WHEN isDelayedUDF(DEPARTURE_DELAY) = 1 THEN 'delayed' ELSE 'ok' END\nORDER BY DAY_OF_WEEK\n",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:13:11+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "DAY_OF_WEEK": "string",
                      "Delay": "string",
                      "Count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "DAY_OF_WEEK",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "Delay",
                  "index": 1,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "Count",
                  "index": 2,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "DAY_OF_WEEK\tDelay\tCount\n1\tdelayed\t16912\n1\tok\t60544\n2\tdelayed\t11369\n2\tok\t60835\n3\tok\t63743\n3\tdelayed\t11017\n4\tok\t67879\n4\tdelayed\t14295\n5\tdelayed\t14170\n5\tok\t63542\n6\tok\t54100\n6\tdelayed\t11268\n7\tdelayed\t16239\n7\tok\t56972\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=25"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548232222506_-1841346966",
      "id": "20190123-140022_450392398",
      "dateCreated": "2019-01-23T14:00:22+0530",
      "dateStarted": "2019-02-07T12:12:26+0530",
      "dateFinished": "2019-02-07T12:12:38+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:186"
    },
    {
      "title": "Find Out When Most Flights Get Delayed by Hour",
      "text": "%spark.sql\n\nSELECT CAST(DEPARTURE_TIME / 100 AS INT) AS Hour, CASE WHEN isDelayedUDF(DEPARTURE_DELAY) = 1 THEN 'delayed' ELSE 'ok' END AS Delay, COUNT(1) AS Count\nFROM flightsView\nGROUP BY CAST(DEPARTURE_TIME / 100 AS INT), CASE WHEN isDelayedUDF(DEPARTURE_DELAY) = 1 THEN 'delayed' ELSE 'ok' END\nORDER BY Hour",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:12:46+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "stackedAreaChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Hour": "string",
                      "Delay": "string",
                      "Count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "style": "stack"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "Hour",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [
                {
                  "name": "Delay",
                  "index": 1,
                  "aggr": "sum"
                }
              ],
              "values": [
                {
                  "name": "Count",
                  "index": 2,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/sql",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Hour\tDelay\tCount\n0\tdelayed\t584\n0\tok\t16136\n1\tok\t433\n1\tdelayed\t235\n2\tdelayed\t89\n2\tok\t99\n3\tok\t27\n3\tdelayed\t45\n4\tdelayed\t26\n4\tok\t406\n5\tdelayed\t109\n5\tok\t15115\n6\tdelayed\t1182\n6\tok\t30412\n7\tdelayed\t2021\n7\tok\t27968\n8\tok\t30205\n8\tdelayed\t2962\n9\tdelayed\t3855\n9\tok\t26795\n10\tok\t27370\n10\tdelayed\t4796\n11\tdelayed\t5551\n11\tok\t27362\n12\tok\t25710\n12\tdelayed\t5769\n13\tok\t27002\n13\tdelayed\t6387\n14\tdelayed\t6759\n14\tok\t23582\n15\tdelayed\t6940\n15\tok\t24837\n16\tok\t23812\n16\tdelayed\t7268\n17\tok\t25956\n17\tdelayed\t7617\n18\tok\t20989\n18\tdelayed\t7938\n19\tdelayed\t7753\n19\tok\t21073\n20\tdelayed\t7094\n20\tok\t15025\n21\tok\t10216\n21\tdelayed\t5343\n22\tok\t5004\n22\tdelayed\t3473\n23\tdelayed\t1460\n23\tok\t2059\n24\tok\t22\n24\tdelayed\t14\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.1.70:4041/jobs/job?id=26"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1548232268263_1971051111",
      "id": "20190123-140108_1435218491",
      "dateCreated": "2019-01-23T14:01:08+0530",
      "dateStarted": "2019-02-07T12:12:38+0530",
      "dateFinished": "2019-02-07T12:12:46+0530",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:187"
    },
    {
      "text": "%spark.sql\n",
      "user": "anonymous",
      "dateUpdated": "2019-02-07T12:12:38+0530",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1549521758372_-661223908",
      "id": "20190207-121238_902428708",
      "dateCreated": "2019-02-07T12:12:38+0530",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:12557"
    }
  ],
  "name": "Spark with Scylla/Flight Data Analysis From Scylla/Cassandra",
  "id": "2E41U7U42",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": [],
    "cassandra:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}